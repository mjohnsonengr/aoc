/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
  // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
  id("org.jetbrains.kotlin.jvm") version "1.7.10"

  id("com.adarshr.test-logger") version "3.2.0"

  // Apply the application plugin to add support for building a CLI application in Java.
  application
}

repositories {
  // Use Maven Central for resolving dependencies.
  mavenCentral()
}

dependencies {
  // Pre-picked dependencies that might be needed (uncomment if needed)
   implementation("com.google.guava:guava:31.1-jre")
}

sourceSets {
  getByName("main").java.srcDirs("src")
  getByName("test").java.srcDirs("test")
}

testing {
  suites {
    // Configure the built-in test suite
    val test by
        getting(JvmTestSuite::class) {
          // Use Kotlin Test framework
          useKotlinTest()
        }
  }
}

application {
  // Define the main class for the application.
  mainClass.set("Part1Kt")
}

task("run1", JavaExec::class) {
  mainClass.set("Part1Kt")
  classpath = sourceSets["main"].runtimeClasspath
}

task("run2", JavaExec::class) {
  mainClass.set("Part2Kt")
  classpath = sourceSets["main"].runtimeClasspath
}
